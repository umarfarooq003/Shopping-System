<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9A9p2NqyvYtSBTo2QA4CPQAjAEAAf//Z
</value>
  </data>
</root>